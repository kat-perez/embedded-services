[package]
name = "espi-service"
version = "0.1.0"
edition = "2024"
description = "eSPI embedded service implementation"
repository = "https://github.com/OpenDevicePartnership/embedded-services"
rust-version = "1.85"
license = "MIT"

[lints]
workspace = true

[dependencies]
embedded-services.workspace = true
debug-service = { path = "../debug-service" }
defmt = { workspace = true, optional = true }
log = { workspace = true, optional = true }
embassy-time.workspace = true
embassy-sync.workspace = true
embassy-imxrt = { workspace = true, features = ["mimxrt633s"] }
embassy-executor.workspace = true
embassy-futures.workspace = true
heapless = "0.8"

[target.'cfg(target_os = "none")'.dependencies]
embassy-executor = { workspace = true, features = [
    "executor-thread",
    "executor-interrupt",
    "arch-cortex-m",
] }
cortex-m-rt.workspace = true
cortex-m = { workspace = true, features = [
    "inline-asm",
    "critical-section-single-core",
] }
embassy-imxrt = { workspace = true, features = [
    "time-driver-os-timer",
    "time",
    "mimxrt633s",
] }

[features]
default = []
defmt = [
    "dep:defmt",
    "embedded-services/defmt",
    "embassy-time/defmt",
    "embassy-time/defmt-timestamp-uptime",
    "embassy-sync/defmt",
    "embassy-imxrt/defmt",
    "embassy-executor/defmt",
]

log = ["dep:log", "embedded-services/log", "embassy-time/log"]
